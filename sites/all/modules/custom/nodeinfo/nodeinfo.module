<?php
/**
 * @file
 *
 */

/*
 * Implementation of hook_init()
 */
function nodeinfo_init() {

}

/**
 * Implements hook_form_alter()
 */
function nodeinfo_form_alter(&$form, &$form_state, $form_id) {
  /**
   * meeting node form
   */
  if ($form_id == 'meeting_node_form' || $form_id == 'evaluation_node_form') {
    /**
     * hide title field, and revise node title is optional instead of required mandatory
     */
    $form['title']['#type'] = 'hidden';
    $form['title']['#required'] = FALSE;

    // $form['field_meeting_program']['und']['#disabled'] = TRUE;

    if (is_numeric(arg(3)) && arg(2) == 'create' && arg(1) == 'meeting') {
      $term = taxonomy_term_load(arg(3));

      $form['field_meeting_program']['und']['#default_value'] = $term->tid;
    }
  }
}

/**
 * Implements hook_node_insert.
 */

/**
 * Implements hook_node_presave().
 * Act on a node being inserted or updated.
 */
function nodeinfo_node_presave($node) {
  _nodeinfo_nodetitle_set_title($node);
}

/**
 * add automatic node title.
 */
function _nodeinfo_nodetitle_set_title(&$node) {
  /**
   * meeting
   */
  if ($node->type == 'meeting') {
    // $node->title = t('Alliance Meeting');
    // $node->title = t('Meeting') . '-' . $MeetingInfo->programName() . '-'. $MeetingInfo->dateValue();
  }
  if ($node->type == 'evaluation') {
    // $node->title = t('Evaluation');
  }
}
